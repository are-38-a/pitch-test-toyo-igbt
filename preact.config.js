import { resolve } from "path";
import MiniCssExtractPlugin from "mini-css-extract-plugin";

export default {
  webpack(config, env, helpers, options) {
    // Remove existing css-loader and add typings-for-css-modules-loader and css-loader with the correct order
    const cssRuleIndex = config.module.rules.findIndex(rule => rule.test && rule.test.toString().includes(".css"));

    if (cssRuleIndex !== -1) {
      const cssRule = config.module.rules[cssRuleIndex];

      cssRule.use = [
        {
          loader: MiniCssExtractPlugin.loader, // Extracts CSS into separate files
        },
        {
          loader: "typings-for-css-modules-loader",
          options: {
            camelCase: true,
            banner: "// This file is automatically generated from your CSS. Any edits will be overwritten.",
            namedExport: true,
            silent: true,
          },
        },
        {
          loader: "css-loader",
          options: {
            importLoaders: 1,
            modules: {
              localIdentName: "[name]__[local]__[hash:base64:5]", // CSSモジュールのクラス名を調整
            },
          },
        },
      ];
    }

    // Add MiniCssExtractPlugin configuration to handle CSS files
    config.plugins.push(
      new MiniCssExtractPlugin({
        filename: "[name].css",
        chunkFilename: "[id].css",
        ignoreOrder: true, // Ignore CSS order warnings
      })
    );

    // Use any `index` file, not just index.js
    config.resolve.alias["preact-cli-entrypoint"] = resolve(process.cwd(), "src", "index");

    return config; // Return the modified config
  },
};
